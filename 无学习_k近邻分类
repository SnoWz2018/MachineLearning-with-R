#Step 1_data collecting

# http://archive.ics.uci.edu/ml 下载数据集“Breast Cancer Wisconsin Diagnostic”
wbcd <- read.csv(file.choose(),stringsAsFactors=FALSE,header=FALSE)

#Step 2_data preparing

wbcd <- wbcd[-1]                                                                    # 首先将id特征完全剔除
table(wbcd$V2)                                                                      # V2变量为diagnosis:B/M(良性/恶性),结果显示B和M的数量
wbcd$V2 <- factor(wbcd$V2,levels = c("B","M"),labels = c("Benign","Malignant"))
round(prop.table(table(wbcd$V2))*100,digits=1)                                      # 结果显示比例
summary(wbcd[c("V3","V6","V7")])                                                    # 结果显示3,6,7列的统计特征

normalize <- function(x) {
  return ((x-min(x))/(max(x)-min(x)))
}                                                                                   #min-max标准化
wbcd_n <- as.data.frame(lapply(wbcd[2:31],normalize))                               # lapply函数
wbcd_train <- wbcd_n[1:469,]                                                        # 训练集
wbcd_test <- wbcd_n[470:569,]                                                       # 测试集
wbcd_train_labels <- wbcd[1:469,1]
wbcd_test_labels <- wbcd[470:569,1] 

#Step 3_train model based on data

install.packages("class")
library(class)                                                                      # class的knn()提供一个标准的KNN算法实现
wbcd_test_pred <- knn(train = wbcd_train,test = wbcd_test,cl=wbcd_train_labels,k=21) # k=21 只是一个尝试

#Step 4_assess the model

CrossTable(x=wbcd_test_labels,y=wbcd_test_pred,prop.chisq=FALSE)                    # 去除不需要的卡方值（chi-square）

#Step 5_improve the property of the model

wbcd_z <- as.data.frame(scale(wbcd[-1]))                                            # scale默认z-score标准化
